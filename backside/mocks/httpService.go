// Code generated by MockGen. DO NOT EDIT.
// Source: sk8.town/backside/httpservice (interfaces: HttpService)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	httpservice "sk8.town/backside/httpservice"
)

// MockHttpService is a mock of HttpService interface.
type MockHttpService struct {
	ctrl     *gomock.Controller
	recorder *MockHttpServiceMockRecorder
}

// MockHttpServiceMockRecorder is the mock recorder for MockHttpService.
type MockHttpServiceMockRecorder struct {
	mock *MockHttpService
}

// NewMockHttpService creates a new mock instance.
func NewMockHttpService(ctrl *gomock.Controller) *MockHttpService {
	mock := &MockHttpService{ctrl: ctrl}
	mock.recorder = &MockHttpServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttpService) EXPECT() *MockHttpServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockHttpService) Get(arg0 string) (*httpservice.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*httpservice.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockHttpServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockHttpService)(nil).Get), arg0)
}
