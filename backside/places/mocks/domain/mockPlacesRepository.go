// Code generated by MockGen. DO NOT EDIT.
// Source: sk8.town/backside/places/domain (interfaces: PlacesRepository)

// Package domain is a generated GoMock package.
package domain

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "sk8.town/backside/places/domain"
	errs "sk8.town/backside/places/errs"
)

// MockPlacesRepository is a mock of PlacesRepository interface.
type MockPlacesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPlacesRepositoryMockRecorder
}

// MockPlacesRepositoryMockRecorder is the mock recorder for MockPlacesRepository.
type MockPlacesRepositoryMockRecorder struct {
	mock *MockPlacesRepository
}

// NewMockPlacesRepository creates a new mock instance.
func NewMockPlacesRepository(ctrl *gomock.Controller) *MockPlacesRepository {
	mock := &MockPlacesRepository{ctrl: ctrl}
	mock.recorder = &MockPlacesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPlacesRepository) EXPECT() *MockPlacesRepositoryMockRecorder {
	return m.recorder
}

// GetPlaces mocks base method.
func (m *MockPlacesRepository) GetPlaces(arg0, arg1 string) (*domain.Places, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPlaces", arg0, arg1)
	ret0, _ := ret[0].(*domain.Places)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetPlaces indicates an expected call of GetPlaces.
func (mr *MockPlacesRepositoryMockRecorder) GetPlaces(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPlaces", reflect.TypeOf((*MockPlacesRepository)(nil).GetPlaces), arg0, arg1)
}
